import { useState } from "react"
import arrowUp from "../../assets/arrowUp.svg";
import styled from "styled-components"

/**
  @media only screen and (max-width: 768px) {
    width: 95%;
  }
 */

const Page = styled.div`
/* ----------------------------------------------
 * Generated by Animista on 2024-7-1 18:2:47
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

/**
 * ----------------------------------------
 * animation slide-in-top
 * ----------------------------------------
 */
@-webkit-keyframes slide-in-top {
  0% {
    -webkit-transform: translateY(-1000px);
            transform: translateY(-1000px);
    opacity: 0;
  }
  100% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
    opacity: 1;
  }
}
@keyframes slide-in-top {
  0% {
    -webkit-transform: translateY(-1000px);
            transform: translateY(-1000px);
    opacity: 0;
  }
  100% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
    opacity: 1;
  }
}


	-webkit-animation: slide-in-top 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
	animation: slide-in-top 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
    height: 100%;
    width: 100%;
    display: grid;
   
`

const Container = styled.div`
    height: 90%;
    width: 85%;
    display: grid;
    grid-template-rows: 1fr min-content;
    align-self: center;
    justify-self: center;
    background: #cbc5ea;
    border-radius: 5px;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
`

const TextInput = styled.input`

    background: none;
    border: black 1px solid;
    height: 30px;
    width: 90%;
    border-radius: 5px;
    font-size: 20px;
`

const TextFieldContainer = styled.div`
    display: flex;
    justify-content: center;
    &:active{
        border: none;
    }
`

const MessageContainer = styled.div`
    height: 95%;
    width: calc(85% + 20px);
    place-self: center;

`

const SubmitBtn = styled.img`
    position: absolute;
    right: calc(5% + 20px);
    cursor: pointer;
    &:focus{
        outline: none;
        box-shadow: 0 15px 10px -15px black;
    }


    
`

function User(){

    return (
        <div>

        </div>
    )
}


function System(){

    return (
        <div>

        </div>
    )
}


export default function AIChat() {
    const [text, setText] = useState("");
    const [chatMessage, setChatMessage] = useState({
        "message" : "",
        "state" : "pending"
    });

    const [messageStack, setmessageStack] = useState([]);

    const endPoint = "http://localhost:3000/api/ai/chat";

    const sendChat = async () => {
        console.log(chatMessage.message)
        const options = {
                "method" : "POST",
                "headers" : {
                    "Content-Type": "application/json",
                    "authorization" : "Bearer " + localStorage.getItem('access_token'),
                },
                "body" : JSON.stringify({
                    "Username" : "123",
                    "Email" : "123",
                    "LastName" : "123",
                    "message" : {
                            "role" : "user",
                            "content" : text
                    }
                })

        }
        //setChatMessage({...chatMessage, state: "successful", message: JSON.stringify(data)})
        const result = await fetch(endPoint, options).then(data => data.json()).then(data => {
            setChatMessage({...chatMessage, state: "successful", message: data.message.content})
        });
        
        
        

        
        //setChatMessage({"message" : await result.json(), "state" : "successful"});
    }

    const changeManager = (e) => {
        setText(e.target.value);
        if(e.key == "Enter"){
            sendChat();
        }
    }
//<input type = "textbox" style = {{height: "200px", width: "400px"}} onKeyUp={changeManager}></input>
    return (
        <Page>

            <Container>            
                    <MessageContainer>
                        {chatMessage.state == "successful" ? chatMessage.message : "Thinking..."}
                    </MessageContainer>
                    <TextFieldContainer>
                    <div style = {{width: "100%", placeSelf: "center", display: "flex", justifyContent: "center", alignItems: "center", position: "relative", padding: "20px"}}>
                        <TextInput onKeyUp={changeManager}></TextInput>
                        <SubmitBtn onClick={sendChat} src = {arrowUp}></SubmitBtn>
                    </div>
                        
                        
                </TextFieldContainer>
            </Container>

        
        </Page>

    )
}