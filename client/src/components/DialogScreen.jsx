import React, { useState } from "react"
import styled from "styled-components"
import EditProfile from "./EditProfile"

const Page = styled.div`
/* ----------------------------------------------
 * Generated by Animista on 2024-10-25 13:37:56
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

/**
 * ----------------------------------------
 * animation fade-in-fwd
 * ----------------------------------------
 */
@-webkit-keyframes fade-in-fwd {
  0% {
    -webkit-transform: translateZ(-80px);
            transform: translateZ(-80px);
    opacity: 0;
  }
  100% {
    -webkit-transform: translateZ(0);
            transform: translateZ(0);
    opacity: 1;
  }
}
@keyframes fade-in-fwd {
  0% {
    -webkit-transform: translateZ(-80px);
            transform: translateZ(-80px);
    opacity: 0;
  }
  100% {
    -webkit-transform: translateZ(0);
            transform: translateZ(0);
    opacity: 1;
  }
}   
    border-radius: 10px;
    height: 100%;
    width: 100%;
    top: 0px;
    left: 0px;
    position: absolute;
    background: white;
    z-index: 10;
    display: ${props => props.$toggle ? "grid" : "none"};
    align-items: center;
    justify-content: center;
	-webkit-animation: fade-in-fwd 0.6s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;
	        animation: fade-in-fwd 0.6s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;
`


const EditButton = styled.button`
    width: fit-content;
    height: fit-content;
    display: ${props => props.$toggle ? "block" : "none"};
`


/**
  Button needs to a Styled-component since it needs the $toggle prop within it to use to activate and deactivate
 */

export default function DialogScreen({buttonText, children, Button}){
    const [toggle, setToggle] = useState(false)
    const handleScreenToggle = () => {
        setToggle(!toggle);
    }
    //<Button onClick={handleScreenToggle} $toggle = {!toggle}>{buttonText}</Button> 
    //clones the children element and adds a new prop called handlescreentoggle
    const Screen = React.cloneElement(children, {handleScreenToggle: handleScreenToggle});
    const Temp = React.cloneElement(Button, {$toggle: toggle, onClick: handleScreenToggle});
    
    return (
        <>
        {Temp}
            <Page $toggle = {toggle}>
                {Screen}
            </Page>
        </>
    )
}